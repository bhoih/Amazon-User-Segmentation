#Importing Libraries

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#Importing data set
dataset = pd.read_csv('/Dataset_master.xlsx - Amazon.com Clusturing Model (Pr.csv')
x = dataset.iloc[: , [2,4]].values

print(x)

# import warnings filter

from warnings import simplefilter

# ignore all future warnings

simplefilter(action='ignore', category=FutureWarning)


from sklearn.cluster import KMeans
wcss = []

for i in range(1,11):
  kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 21)
  kmeans.fit(x)
  wcss.append(kmeans.inertia_)

plt.plot(range(1,11),wcss)
plt.title('wcss via Elbow Method')
plt.xlabel('Number of Clusters')
plt.ylabel('WCSS Values')
plt.show()

#Optimal number of Clusters via elbo method
#K-Means Model Training on Training set


kmeans = KMeans(n_clusters = 4, init = 'k-means++', random_state = 42)
y_means = kmeans.fit_predict(x)
print(y_means)

#Visualizing Clusters
plt.scatter(x[y_means == 0,0], x[y_means == 0,1], s=100, c= 'magenta', label='Cluster 1')
plt.scatter(x[y_means == 1,0], x[y_means == 1,1], s=100, c= 'blue', label='Cluster 2')
plt.scatter(x[y_means == 2,0], x[y_means == 2,1], s=100, c= 'red', label='Cluster 3')
plt.scatter(x[y_means == 3,0], x[y_means == 3,1], s=100, c= 'cyan', label='Cluster 4')

#plt.scatter(kmeans.cluster_centers_[ : , 0], kmeans.cluster-centers_[:, 1], B=300, c='black', label = 'centroids')

plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'black', label = 'Centroids')

plt.title('Clusters of amazon Users')
plt.xlabel('Annual Income in INR')
plt.ylabel('Purchase Rating')
plt.legend()
plt.show()



